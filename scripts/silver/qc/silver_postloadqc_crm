/* Script purpose:
	Quality check of data inserted into tables of silver_crm
    
    naming of file <layer>_purpose_<source>
*/

--  Select the schema where the project is stored.
	USE project1_datawarehouse;
    
    
-- =========================================================================================
-- silver_crm_cust_info
    SELECT * FROM silver_crm_cust_info;

-- Identify if there are duplicate issues. (Quality Check)
SELECT
	cst_id,
    COUNT(*)
FROM silver_crm_cust_info
GROUP BY cst_id
HAVING COUNT(*) > 1 OR cst_id IS NULL;

SELECT
	cst_key,
    COUNT(*)
FROM silver_crm_cust_info
GROUP BY cst_key
HAVING COUNT(*) > 1 OR cst_key IS NULL;

-- Check for unwanted/trailing spaces on columns with string values. (Quality Check)
SELECT
	cst_key
FROM silver_crm_cust_info
WHERE cst_key != TRIM(cst_key);

SELECT
	cst_firstname
FROM silver_crm_cust_info
WHERE cst_firstname != TRIM(cst_firstname);

SELECT
	cst_lastname
FROM silver_crm_cust_info
WHERE cst_lastname != TRIM(cst_lastname);

-- Identify columns with blank values and how to resolve them. (Quality Check)
-- Check the consistency of values in low cardinality columns, normalize values as needed. (Quality Check)
SELECT DISTINCT cst_marital_status
FROM silver_crm_cust_info;

SELECT DISTINCT cst_gndr
FROM silver_crm_cust_info;
-- Identify problems with date columns


-- =========================================================================================
-- silver_crm_prd_info
    SELECT * FROM silver_crm_prd_info;
    
-- Identify if there are duplicate issues. (Quality Check)
SELECT
	prd_id,
    COUNT(*)
FROM silver_crm_prd_info
GROUP BY prd_id
HAVING COUNT(*) > 1 OR prd_id IS NULL;

-- Check for unwanted/trailing spaces on columns with string values. (Quality Check)
SELECT prd_key
FROM silver_crm_prd_info
WHERE prd_key != TRIM(prd_key);

SELECT prd_nm
FROM silver_crm_prd_info
WHERE prd_nm != TRIM(prd_nm);

-- check for NULLs or negative number on prd_cost column (Quality Check)
-- check for outlier prd_cost values
SELECT prd_cost
FROM silver_crm_prd_info
WHERE prd_cost < 0 OR prd_cost IS NULL;

SELECT MAX(prd_cost), MIN(prd_cost)
FROM silver_crm_prd_info;

-- Check the consistency of values in low cardinality columns, normalize values as needed. (Quality Check)
SELECT DISTINCT prd_line
FROM silver_crm_prd_info;

-- Identify problems with date columns (Quality Check)
SELECT * FROM silver_crm_prd_info
WHERE prd_start_dt > prd_end_dt; 


-- =========================================================================================
-- silver_crm_sales_details
SELECT * FROM silver_crm_sales_details;

-- sls_ord_num
-- No unwanted spaces, NULLs 
SELECT *
FROM silver_crm_sales_details
WHERE 
	sls_ord_num != TRIM(sls_ord_num)
    OR sls_ord_num IS NULL;

-- sls_prd_key
-- no unwanted spaces
-- all sls_prd_key in prd_key from silver_crm_prd_info

SELECT *
FROM silver_crm_sales_details
WHERE sls_prd_key != TRIM(sls_prd_key);

SELECT sls_prd_key
FROM silver_crm_sales_details
WHERE sls_prd_key NOT IN (SELECT prd_key FROM silver_crm_prd_info);

-- sls_cust_id
-- all sls_cust_id in cst_id from silver_crm_cust_info
SELECT sls_cust_id
FROM silver_crm_sales_details
WHERE sls_cust_id NOT IN (SELECT cst_id FROM silver_crm_cust_info);

-- sls_order_dt
-- sls_order_dt < sls_ship_dt < sls_due_dt
-- no NULL, 0, negatives, length of characters = 10

SELECT sls_order_dt
FROM silver_crm_sales_details
WHERE 
sls_order_dt > sls_ship_dt OR
sls_order_dt IS NULL OR sls_order_dt <= 0 OR LENGTH(sls_order_dt) != 10;

-- sls_ship_dt
-- no NULL, 0, negatives, length of characters = 10
SELECT sls_ship_dt
FROM silver_crm_sales_details
WHERE 
sls_ship_dt IS NULL OR sls_ship_dt <= 0 OR LENGTH(sls_ship_dt) != 10;

-- sls_due_dt
-- no NULL, 0, negatives, length of characters = 10
SELECT sls_due_dt
FROM silver_crm_sales_details
WHERE 
sls_due_dt IS NULL OR sls_due_dt <= 0 OR LENGTH(sls_due_dt) != 10;

-- sls_sales
-- sls_sales = sls_quantity * sls_price
-- sls_sales > 0, sls_sales IS NOT NULL

SELECT sls_sales
FROM silver_crm_sales_details
WHERE
	sls_sales != sls_quantity * sls_price OR
    sls_sales <= 0 OR
    sls_sales IS NULL;
    
-- sls_quantity
-- sls_quantity > 0, NOT NULL
SELECT sls_quantity
FROM silver_crm_sales_details
WHERE
	sls_quantity IS NULL OR
    sls_quantity <= 0;
    
-- sls_price
-- sls_price = sls_sales / sls_quantity
-- sls_price > 0, sls_sales IS NOT NULL
SELECT sls_price
FROM silver_crm_sales_details
WHERE
	sls_price != sls_sales / sls_quantity OR
    sls_price <= 0 OR
    sls_price IS NULL;
